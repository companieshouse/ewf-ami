---
- name: Set SELinux to permissive
  vars:
    ansible_python_interpreter: /usr/bin/python2.6
  selinux:
    policy: targeted
    state: permissive

- name: install boto and botocore
  pip:
    name: ['boto', 'boto3', 'botocore']
    executable: /usr/local/bin/pip

- name: Create groups
  group:
    name: "chlservices"
    gid: "600"
    state: present

- name: Create users
  user:
    name: '{{ item.name }}'
    groups: '{{ item.groups }}'
    state: present
  with_items: '{{ users }}'

#- name: Download Oracle setup files from s3
  #aws_s3:
    #bucket: development-eu-west-2.resources.ch.gov.uk
    #object: '{{ s3_files_oracle }}'
    #dest: "/tmp/{{ s3_files_oracle_name }}"
    #mode: get

- name: Download Oracle setup files from s3 - basic rpm
  aws_s3:
    bucket: development-eu-west-2.resources.ch.gov.uk
    object: '{{ s3_files_oracle_basic_rpm }}'
    dest: "/tmp/{{ s3_files_oracle_basic_rpm_name }}"
    mode: get

- name: Download Oracle setup files from s3 - devel rpm
  aws_s3:
    bucket: development-eu-west-2.resources.ch.gov.uk
    object: '{{ s3_files_oracle_devel_rpm }}'
    dest: "/tmp/{{ s3_files_oracle_devel_rpm_name }}"
    mode: get

- name: Download Oracle setup files from s3 - sqlplus rpm
  aws_s3:
    bucket: development-eu-west-2.resources.ch.gov.uk
    object: '{{ s3_files_oracle_sqlplus_rpm }}'
    dest: "/tmp/{{ s3_files_oracle_sqlplus_rpm_name }}"
    mode: get

- name: Download static application files from s3
  aws_s3:
    bucket: development-eu-west-2.resources.ch.gov.uk
    object: '{{ s3_file_app_static }}'
    dest: "/tmp/{{ s3_files_app_static_name }}"
    mode: get

- name: Download application files from s3
  aws_s3:
    bucket: development-eu-west-2.resources.ch.gov.uk
    object: '{{ s3_file_app }}'
    dest: "/tmp/{{ s3_files_app_name }}"
    mode: get

- name: List contents of /tmp
  command: ls -l /tmp
  register: tmpfiles
  ignore_errors: true
- name: Output of /tmp
  ansible.builtin.debug:
    msg: "{{ tmpfiles }}"
  ignore_errors: true

- name: Unarchive tar files
  unarchive:
    remote_src: yes
    src: "/tmp/{{ item }}"
    dest: /tmp/
  with_items: '{{ tar_files }}'

- name: List contents of /tmp - 2
  command: ls -al /tmp
  register: tmpfiles2
  ignore_errors: true
- name: Output of /tmp - 2
  ansible.builtin.debug:
    msg: "{{ tmpfiles2 }}"
  ignore_errors: true

- name: Find contents of /tmp - 2
  command: find /tmp -name *.rpm
  register: tmpfiles3
  ignore_errors: true
- name: Output of find /tmp - 2
  ansible.builtin.debug:
    msg: "{{ tmpfiles3 }}"
  ignore_errors: true

- name: Find module mod_cookietrack
  command: find /tmp -name mod_cookietrack.so
  register: tmpfiles4
  ignore_errors: true
- name: Output of find module mod_cookietrack
  ansible.builtin.debug:
    msg: "{{ tmpfiles4 }}"
  ignore_errors: true

#- name: Install Oracle packages
  #vars:
    #ansible_python_interpreter: /usr/bin/python2.6
  #yum:
     #name: /tmp/oracle-database-10.2.0/oracle-instantclient11.2-basic-11.2.0.2.0.x86_64.rpm
     #state: present

#- name: Install Oracle packages
  #vars:
    #ansible_python_interpreter: /usr/bin/python2.6
  #yum:
     #name: "/tmp/{{ oracle_packages }}"
     #state: present

# Using 3 separate tasks as using a list caused failures in concourse pipeline
- name: Install Oracle packages - basic
  vars:
    ansible_python_interpreter: /usr/bin/python2.6
  yum:
     name: "/tmp/{{ oracle_packages_basic }}"
     state: present

- name: Install Oracle packages - devel
  vars:
    ansible_python_interpreter: /usr/bin/python2.6
  yum:
     name: "/tmp/{{ oracle_packages_devel }}"
     state: present

- name: Install Oracle packages - sqlplus
  vars:
    ansible_python_interpreter: /usr/bin/python2.6
  yum:
     name: "/tmp/{{ oracle_packages_sqlplus }}"
     state: present

- name: Ensure env variables are set
  vars:
    ansible_python_interpreter: /usr/bin/python2.6
  lineinfile:
    path: "{{ user_home_path }}/.bash_profile"
    line: '{{ item }}'
  with_items:
   - export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib/
   - export TNS_ADMIN=/usr/lib/oracle/11.2/client64/lib/

- name: Add config to ld.so.conf
  vars:
    ansible_python_interpreter: /usr/bin/python2.6
  lineinfile:
    path: /etc/ld.so.conf
    line: '{{ item }}'
  with_items:
    - /usr/lib/oracle/11.2/client64/lib/
    - /usr/local/lib

- name: Run ldconfig
  command: /sbin/ldconfig

- name: Remove any exisitng Perl binaries
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - /usr/local/lib64/perl5 
    - /usr/local/share/perl5 
    - /usr/lib64/perl5/vendor_perl 
    - /usr/share/perl5/vendor_perl 
    - /usr/lib64/perl5 
    - /usr/share/perl5

- name: Install Perl binaries
  copy:
    src: /tmp/usr
    dest: /usr

- name: Install base application files to home path
  copy:
    src: "/tmp/{{ item }}"
    dest: '{{ user_home_path }}'
  with_items: '{{ user_home_path_content }}'

- name: Remove base application installation files
  file:
    path: "/tmp/{{ item }}"
    state: absent
  with_items: '{{ user_home_path_content }}'

- name: Delete installation files
  find:
    paths: /tmp
    #patterns: 'oracle-instantclient*,*.tar.gz,usr,'
    patterns: '{{ files_to_remove }}'  
  register: files_to_delete

- name: Remove installation files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
